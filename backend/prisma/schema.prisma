generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id          String        @id @default(uuid())
    username    String        @unique
    password    String
    posts       Post[]
    comments    Comment[]
    postVotes   PostVote[]
    CommentVote CommentVote[]
}

model Post {
    id            String     @id @default(uuid())
    createdAt     DateTime   @default(now())
    title         String
    textContent   String?
    image         String?
    imagePublicId String?
    author        User       @relation(fields: [authorId], references: [id])
    authorId      String
    subribbit     Subribbit  @relation(fields: [subribbitId], references: [id])
    subribbitId   String
    comments      Comment[]
    votes         PostVote[]
}

model Subribbit {
    id          String @id @default(uuid())
    name        String @unique
    description String
    posts       Post[]
}

model Comment {
    id        String        @id @default(uuid())
    text      String
    createdAt DateTime      @default(now())
    author    User?         @relation(fields: [authorId], references: [id])
    authorId  String?
    post      Post?         @relation(fields: [postId], references: [id])
    postId    String?
    votes     CommentVote[] @relation("CommentToVotes")
}

model PostVote {
    id        String   @id @default(uuid())
    value     Int
    user      User     @relation(fields: [userId], references: [id])
    userId    String
    post      Post     @relation(fields: [postId], references: [id])
    postId    String
    createdAt DateTime @default(now())

    @@unique([userId, postId])
}

model CommentVote {
    id        String   @id @default(uuid())
    value     Int
    user      User     @relation(fields: [userId], references: [id])
    userId    String
    comment   Comment  @relation("CommentToVotes", fields: [commentId], references: [id])
    commentId String
    createdAt DateTime @default(now())

    @@unique([userId, commentId])
}
